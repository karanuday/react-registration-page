{"ast":null,"code":"var _jsxFileName = \"/Users/hodor/Personal/shivom/src/pages/SignUp.js\";\nimport React, { Component } from 'react';\n\nclass signUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      uname: '',\n      email: '',\n      pwd: '',\n      showPwd: false\n    };\n  }\n\n  updateField(e, field) {\n    console.log(e);\n    this.setState({\n      [field]: e.target.value\n    });\n  }\n\n  render() {\n    const {\n      uname,\n      email,\n      pwd\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: () => {\n        this.props.submitForm(uname, email, pwd);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"uname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, \"Username:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"uname\",\n      value: uname,\n      autocomplete: \"off\",\n      onChange: event => {\n        this.updateField(event, 'uname');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 71\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"lname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \"Email:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 42\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      value: email,\n      onChange: event => {\n        this.updateField(event, 'email');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"lname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"Password:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: this.showPwd ? 'text' : 'password',\n      id: \"email\",\n      value: pwd,\n      onChange: event => {\n        this.updateField(event, 'pwd');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.showPwd = !this.showPwd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }\n    }, \"Show\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default signUp;","map":{"version":3,"sources":["/Users/hodor/Personal/shivom/src/pages/SignUp.js"],"names":["React","Component","signUp","constructor","props","state","uname","email","pwd","showPwd","updateField","e","field","console","log","setState","target","value","render","submitForm","event"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nclass signUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      uname: '',\n      email: '',\n      pwd: '',\n      showPwd: false,\n    };\n  }\n\n  updateField(e, field) {\n    console.log(e);\n    this.setState({ [field]: e.target.value });\n  }\n\n  render() {\n    const { uname, email, pwd } = this.state;\n    return (\n      <form onSubmit={() => { this.props.submitForm(uname, email, pwd) }}>\n        <label for=\"uname\">Username:</label><br/>\n        <input type=\"text\" id=\"uname\" value={uname} autocomplete=\"off\"\n          onChange={(event) => { this.updateField(event, 'uname') }}/><br/>\n        <label for=\"lname\">Email:</label><br/>\n        <input type=\"email\" id=\"email\" value={email}\n          onChange={(event) => { this.updateField(event, 'email') }}\n        /><br/>\n        <label for=\"lname\">Password:</label><br/>\n        <input type={this.showPwd ? 'text' : 'password'} id=\"email\" value={pwd}\n          onChange={(event) => { this.updateField(event, 'pwd') }}\n        /><br/><button onClick={this.showPwd = !this.showPwd}>Show</button>\n        <input type=\"submit\" value=\"Submit\"/>\n      </form>\n    );\n  }\n}\n\nexport default signUp;"]},"metadata":{},"sourceType":"module"}